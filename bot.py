import asyncio
from telethon import TelegramClient, events
from datetime import datetime, timedelta
import re

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
api_id = 27481215  # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π API ID
api_hash = '75f495f542a5beb8ba632b70fc7ebf79'  # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π API HASH
session_file = 'anon'  # —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ –±–µ–∑ .session

chat_ids = [
    -1002048172508, -1002058755890, -1002146109187,
    -1001891589065, -1001974198702, -1001840337788,
    -1002011050670, -1002084209596, -1002094849653,
    -1002193485779, -1002202792246, -1002215306818,
    -1002438264294, -1002400892367, -1002420417890
]

target_group_id = -4877016471  # <- ID —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
your_tag = '@Mytracksignal'    # <- —Ç–≤–æ–π Telegram @—é–∑–µ—Ä–Ω–µ–π–º

# --- –õ–û–ì–ò–ö–ê ---
client = TelegramClient(session_file, api_id, api_hash)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–∞–∂–¥–æ–º—É —á–∞—Ç—É: –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–≥–Ω–∞–ª—ã
chat_signal_log = {}

# –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ "–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"
async def periodic_notify():
    while True:
        await client.send_message(target_group_id, "ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤.")
        await asyncio.sleep(300)

def clean_text(text):
    return text.replace('\n', ' ').lower()

@client.on(events.NewMessage(chats=chat_ids))
async def handler(event):
    message_text = clean_text(event.raw_text)

    # –ò—â–µ–º —Å–∏–≥–Ω–∞–ª –±–µ–∑ –¥–æ–≥–æ–Ω–æ–≤
    if "–¥–∞–≥–æ–Ω" in message_text:
        return  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–≥–æ–Ω

    if "+" not in message_text:
        return  # –Ω–µ –ø–ª—é—Å ‚Äî –Ω–µ —Å–∏–≥–Ω–∞–ª

    chat_id = event.chat_id
    now = datetime.now()

    if chat_id not in chat_signal_log:
        chat_signal_log[chat_id] = []

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∏–≥–Ω–∞–ª
    chat_signal_log[chat_id].append(now)

    # –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 –º–∏–Ω—É—Ç
    chat_signal_log[chat_id] = [
        t for t in chat_signal_log[chat_id] if now - t < timedelta(minutes=15)
    ]

    if len(chat_signal_log[chat_id]) >= 3:
        await client.send_message(
            target_group_id,
            f"üö® {your_tag} –í —á–∞—Ç–µ {event.chat.title or chat_id} ‚Äî 3 —Å–∏–≥–Ω–∞–ª–∞ –ø–æ–¥—Ä—è–¥ –±–µ–∑ –¥–æ–≥–æ–Ω–æ–≤!"
        )
        chat_signal_log[chat_id] = []  # —Å–±—Ä–æ—Å –ø–æ—Å–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

# --- –ó–ê–ü–£–°–ö ---
async def main():
    await client.start()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await asyncio.gather(
        client.run_until_disconnected(),
        periodic_notify()
    )

if __name__ == '__main__':
    asyncio.run(main())
